{"version":3,"sources":["webpack:///./src/client/components/About/About.js","webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/client/components/NavBar/NavBar.js"],"names":["About","react_default","a","createElement","NavBar","AboutPage","components_About_About","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","pathname","string","isRequired","createContext","object","func","styles","navBarRoot","display","flexDirection","justifyContent","largeNavBar","titleRoot","textAlign","height","alignItems","margin","title","fontFamily","color","textDecoration","fontSize","toolbarContainer","width","toolbar","flexFlow","navButtons","borderRadius","&:hover","borderBottom","background","padding","navButtonsLabel","textTransform","mobileNavBar","mobileMenuButton","marginRight","mobileMenuData","menu","textColor","mobileTitle","marginLeft","state","auth","anchorEl","handleChange","event","_this","setState","target","checked","handleMenu","currentTarget","handleClose","render","_this2","this","classes","props","open","Boolean","className","classNames","Typography","gatsby_link_default","to","navBarData","map","data","Button","label","disableRipple","disableTouchRipple","key","indexOf","link","style","id","IconButton","onClick","Menu_default","Paper","Menu_Menu","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","length","Component","children","node","withStyles"],"mappings":"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","file":"component---src-pages-about-js-30dcef235048397439d2.js","sourcesContent":["import React from 'react'\r\nimport NavBar from '../NavBar/NavBar'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport About from '../client/components/About/About'\r\n\r\nconst AboutPage = () => {\r\n    return (\r\n        <div>\r\n            <About />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React, { Component } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Menu from \"@material-ui/core/Menu\"\r\nimport classNames from \"classnames\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport navBarData from \"./navBarData.json\"\r\nimport \"./styles/NavBar.css\"\r\nimport \"typeface-montserrat\"\r\n\r\nconst styles = {\r\n  navBarRoot: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    //height: \"20%\",\r\n    justifyContent: \"space-between\",\r\n    // border: '1px solid black',\r\n  },\r\n  largeNavBar: {\r\n    //border: '1px solid black',\r\n    //height: '100%',\r\n  },\r\n\r\n  titleRoot: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    height: \"40%\",\r\n    alignItems: \"center\",\r\n    margin: \"35px\",\r\n  },\r\n\r\n  title: {\r\n    fontFamily: '\"Montserrat\"',\r\n    color: \"#fff\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"4.5vmin\",\r\n  },\r\n\r\n  toolbarContainer: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    height: \"30%\",\r\n  },\r\n\r\n  toolbar: {\r\n    width: \"75%\",\r\n    justifyContent: \"space-evenly\",\r\n    display: \"flex\",\r\n    flexFlow: \"row wrap\",\r\n  },\r\n\r\n  navButtons: {\r\n    borderRadius: 0,\r\n    \"&:hover\": {\r\n      borderBottom: \"3px solid #727272\",\r\n      background: \"transparent\",\r\n    },\r\n    padding: \"0px 0px 10px 0px\",\r\n    borderBottom: \"3px solid transparent\",\r\n  },\r\n\r\n  navButtonsLabel: {\r\n    fontSize: \"20px\",\r\n    fontFamily: '\"Montserrat\"',\r\n    textTransform: \"none\",\r\n    textDecoration: \"none\",\r\n    color: \"#fff\",\r\n    //border: '1px solid black'\r\n  },\r\n\r\n  mobileNavBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    //border: '1px solid black',\r\n    //backgroundColor: 'rgba(255, 255, 255, .5)',\r\n  },\r\n\r\n  mobileMenuButton: {\r\n    color: \"#727272\",\r\n    marginRight: \"5vmax\",\r\n  },\r\n\r\n  mobileMenuData: {\r\n    color: \"#727272\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  menu: {\r\n    textColor: \"#727272\",\r\n    marginRight: \"5vmax\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  mobileTitle: {\r\n    fontSize: \"4vmin\",\r\n    fontFamily: \"Montserrat\",\r\n    color: \"#727272\",\r\n    marginLeft: \"5vmax\",\r\n    textDecoration: \"none\",\r\n  },\r\n}\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    auth: true,\r\n    anchorEl: null,\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ auth: event.target.checked })\r\n  }\r\n\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { anchorEl } = this.state\r\n    const open = Boolean(anchorEl)\r\n    //const nav = [\"Resume\", \"Projects\",\"About\",\"Contact\"];\r\n\r\n    return (\r\n      <div className={classNames(classes.navBarRoot, \"navBarRoot\")}>\r\n        <div className={classNames(classes.largeNavBar, \"largeNavBar\")}>\r\n          <div className={classNames(classes.titleRoot, \"titleRoot\")}>\r\n            <div className={classNames(classes.title, \"title\")}>\r\n              <Typography\r\n                \r\n                className={classNames(classes.title, \"title\")}\r\n              >\r\n                <Link to=\"/\" className={classNames(classes.title, \"title\")}>\r\n                  Jamal Scott\r\n                </Link>\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={classNames(classes.toolbarContainer, \"toolbarContainer\")}\r\n          >\r\n            <div className={classNames(classes.toolbar, \"toolbar\")}>\r\n              {navBarData.map(data => (\r\n                <Button\r\n                  classes={{ label: classes.navButtonsLabel }}\r\n                  className={classNames(classes.navButtons, \"navButtons\")}\r\n                  disableRipple={true}\r\n                  disableTouchRipple={true}\r\n                  key={navBarData.indexOf(data)}\r\n                >\r\n                  <Link to={data.link} style={styles.navButtonsLabel}>\r\n                    {data.title}\r\n                  </Link>\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          id=\"mobileNavBar\"\r\n          className={classNames(classes.mobileNavBar, \"mobileNavBar\")}\r\n        >\r\n          <Typography>\r\n            <Link\r\n              to=\"/\"\r\n              className={classNames(classes.mobileTitle, \"mobileTitle\")}\r\n            >\r\n              Jamal Scott\r\n            </Link>\r\n          </Typography>\r\n\r\n          <div>\r\n            <IconButton\r\n              onClick={this.handleMenu}\r\n              color=\"inherit\"\r\n              className={classNames(\r\n                classes.mobileMenuButton,\r\n                \"mobileMenuButton\"\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Paper>\r\n              <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\",\r\n                }}\r\n              >\r\n                {navBarData.map(data => (\r\n                  <MenuItem\r\n                    key={navBarData.indexOf(data)+navBarData.length}\r\n                    onClick={this.handleClose}\r\n                  >\r\n                    <Link\r\n                      to={data.link}\r\n                      className={classNames(\r\n                        classes.mobileMenuData,\r\n                        \"mobileMenuData\"\r\n                      )}\r\n                    >\r\n                      {data.title}\r\n                    </Link>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  children: PropTypes.node,\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default withStyles(styles)(NavBar)\r\n"],"sourceRoot":""}